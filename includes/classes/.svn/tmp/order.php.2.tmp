<?php
/**
 * TPL :: Order Processing System
 *
 * @copyright		Copyright (c) Terumo Penpol. All rights reserved.
 * @category 		Order Processing
 * @identity		Terumo Penpol is India's largest manufacturer of Blood Bags. This web portal would help order management. 
 * @author			Syamnath
 * @version			$Id: order.php  Wednessday, June 16, 2010, 03:18:41 PM $
 *		
 */
 
class Order
{
	function getOrderDetails($oid) {  	
	
	$q= Query("SELECT o.id, o.order_no, o.dl_20b, o.dl_21b, o.cst, o.tin, o.bbl, o.tax_status, o.tax_type, o.customer_id,  DATE_FORMAT(o.prefered_date , ".SHORT_DATE." ) as prefered_date, o.payment_terms, o.payment_type, o.payment_no, DATE_FORMAT(o.payment_date , ".SHORT_DATE." ) as payment_date, o.payment_amount, o.instructions, o.order_status, o.invoice_no, DATE_FORMAT(o.delivered_date , ".SHORT_DATE_WITHTIME." ) as delivered_date, o.carrer_information, o.transportation_mode, DATE_FORMAT(o.received_date , ".SHORT_DATE_WITHTIME." ) as received_date,o.created_by, DATE_FORMAT(o.created_date , ".SHORT_DATE_WITHTIME." ) as created_date, o.tax_rate, o.request_to_cancel, o.reason_cancel, o.request_canceldate, c.address, c.name FROM `[x]order` o, `[x]customer` c WHERE o.id='{$oid}' and o.customer_id=c.id");	 
	
	
		 if(Num($q))
		 {
		  $r = FetchAssoc($q);	
		  //print_r($r); 	 
		  return $r;
		 }
	}
	
	function getorderproducts($oid) { 
		$order= Query("SELECT po.carton_no, po.quantity, po.rate, po.value, p.name as productname, p.code from `[x]product_order` po, `[x]product` p where po.order_id={$oid} and po.product_id=p.id");
		$i=1;
		$total=0;
		 if(Num($order))
		 {
		  	while($r = FetchAssoc($order)) {
				$r['slno'] = $i;
				if($i%2 ==0) {
					$r['class'] = 'one';
				}else { 
					$r['class'] = 'two';
				}
				$total +=$r['value'];
				$result[] =$r;
				$i++;
			}	
			$result['total'] = $total;	 
		  return $result;
		 }
	}
	
	
	
   function generateOrderNo($order_id){
   
		$today = date('dmY');
		if ($order_id < 10){                // If the value is under 10 then 2 zeros are needed to make a 3 digit value.
		$order_no = "000" . $order_id;
		}
		else if ($order_id < 100){      // If the value is under 100 then 1 zero is needed to make a 3 digit value.
		$order_no = "00" . $order_id;
		}
		else if ($order_id < 1000){  
		$order_no = "0" . $order_id;
		}
		else{                               // If the value is not less the 10 or 100 then is is already a 3 digit value.
		$order_no = $order_id;
		}
		return $today.$order_no;
	}
	
	 	 
	function getcurrentorderstatus($oid) { 
 		$orderstatus= Query("SELECT os.current_status,s.ba_visibility FROM `[x]order_status` os, `[x]status` s  where os.order_id={$oid} and os.current_status=s.id order by os.id desc limit 0,1");
		if(Num($orderstatus)) {
		  	 $r = FetchAssoc($orderstatus);	
			 if($r['ba_visibility'] == 0 && $_SESSION['utype'] == 'BA'){
 			 	$bastatus= FetchAssoc(Query("SELECT os.current_status,s.ba_visibility FROM `[x]order_status` os, `[x]status` s  where os.order_id={$oid} and os.current_status=s.id and s.ba_visibility=1 order by os.id desc limit 0,1"));
				 return $bastatus['current_status'];;
			 }else{
   		  		return $r['current_status'];
			}
		 }
	}
	
	function getallstatus($oid) { 
	
		$extra = '';
		if($_SESSION['rid'] == 2) {
			$extra = ' and s.ba_visibility = 1';
		}
	 
		
 		$orderstatus= Query("SELECT o.comment, o.updated_by, o.current_status, DATE_FORMAT(o.updated_date , ".SHORT_DATE_WITHTIME." ) as updated_date, u.first_name, u.last_name, s.ba_visibility FROM `[x]order_status` o, `[x]user` u, `[x]status` s where order_id={$oid} and u.id=o.updated_by and s.id = o.current_status" . $extra." order by o.updated_date");
 		$i=0;
		if(Num($orderstatus)) {
		  	while($r = FetchAssoc($orderstatus)) {
				$r['slno'] = $i;
				if($i%2 ==0) {
					$r['class'] = 'one';
				}else { 
					$r['class'] = 'two';
				}
				$orderremarks = $this->getstatusname($r['current_status']);
				$r['status'] = $orderremarks['status'];
				$r['action'] = $orderremarks['action'];
 				$r['doneby'] = $this->getdoenby($r['updated_by']);
 				$result[] =$r;
				$i++;
			}	
			
 	 	 	return $result;
		}
	}
	
	function getstatusname($sid) {
		
			$orderstatus= Query("SELECT * FROM `[x]status` where id={$sid}");
			if(Num($orderstatus)) {
				$r = FetchAssoc($orderstatus);
				return $r;
			 }	
	}
	
	function getworkflows() {
		$workflowquery = Query("SELECT * FROM workflow where complaint=0");
			if(Num($workflowquery)) {
			$i=0;
				while($workflowresult = FetchAssoc($workflowquery)) {
					if($i%2 ==0) {
						$workflowresult['class'] = "two";
					}else {
						$workflowresult['class'] = "one";
					}		
					$workflowresult['role'] =$this->getrolename($workflowresult['user_role']);
					$getstatus =$this->getstatusname($workflowresult['status']);
					$workflowresult['statusname'] = $getstatus['status'];
					$getnextstatus =$this->getstatusname($workflowresult['next']);
					$workflowresult['nextstatus'] = $getnextstatus['status'];
					$workflows[] = $workflowresult;
					$i++;
				}
				
				return $workflows;
			}
	}
	
	function getrolename($rid) {	
	$query= Query("SELECT roleName FROM `[x]roles` WHERE ID='{$rid}'");		
		 if(Num($query))
		 {
		  $result = FetchAssoc($query);		 	 
		  return $result['roleName'];
		 }
	}
	
	function getdoenby($utid) {
 	$q= Query("SELECT r.roleName FROM `roles` r, `user_roles` ur WHERE ur.userID ={$utid} AND r.ID = ur.roleId");	 
 
		 if(Num($q))
		 {
			 while($r = FetchAssoc($q)){
				$utype  = $r;
				}
			  return $utype['roleName'];
		 }
	}
	
	function getordermadeby($oid,$format = '') {
		$result= FetchAssoc(Query("SELECT u.first_name,u.id FROM `user` u, `order` o WHERE o.id ={$oid} AND u.id = o.created_by"));	 	
		$id=$result['id'];
 		$role_result= FetchAssoc(Query("SELECT r.roleName FROM `roles` r, `user_roles` ur WHERE ur.userID ={$id} AND r.ID = ur.roleId"));	 
		if($format == 'name_role') {
 	 		 return $result['first_name'].' ('.$role_result['roleName'].') ';		
		}else{
			 return $result['first_name'];
		}  
	}
	 
	function dasboardallorder($from,$to,$status) {	
 		$extra = '';
 		if($_SESSION['utype'] == 'BA') {			
			 $extra =" AND o.created_by = {$_SESSION['id']}";		
 		}else if($_SESSION['utype'] == 'AM'){
			$extra =" AND u.area_id = {$_SESSION['areaid']}";
 		}else if($_SESSION['utype'] == 'ZH'){
			$extra =" AND u.zone_id = {$_SESSION['zoneid']}";		
 		}
		
 		if($status == 8) {
			$extracondition ="and os.status !=11 and os.status >=".$status.$extra;	
		}else if($status == 11) {
			$extracondition ="and os.status =11".$extra;	
		}else{
			$extracondition = "and os.status !=11".$extra;
		}
		
	    $query = "Select o.id From (Select order_id,MAX(current_status) as status from order_status group by order_id) os INNER JOIN `order` o ON o.id = os.order_id INNER JOIN `user` u ON u.id=o.created_by and DATE_FORMAT(o.created_date, '%Y-%m-%d') >=  '".$from."' AND DATE_FORMAT(o.created_date, '%Y-%m-%d') <=  '".$to."' ".$extracondition." ORDER BY o.id desc";
		$q = Query($query);
		$values['number'] = Num($q);
		$total=0;
			while($r = FetchAssoc($q)) {				
				$sumquery= FetchAssoc(Query("SELECT SUM(`value`) as total FROM  `product_order` WHERE order_id=".$r['id']));
				$total +=$sumquery['total'];
			}
		$values['total'] =	$total;
		return $values;
	}
	
	
	function gettotal($orderid){
	
	 $query ="SELECT SUM( `value` ) AS total FROM `product_order` WHERE order_id =".$orderid;
	 $query= Query($query);
	 $total = " ";
	 if(Num($query))
		 {
			 while($r = FetchAssoc($query)){
				$result  = $r;
				}
			  $total =$result['total'];
		 }
	
	return $total;
	
	}
	
	function getproducts($orderid){
	
	$query ="SELECT product.name , product_order.carton_no,product_order.quantity,product_order.rate,product_order.value
	         FROM product_order , product WHERE product_order.product_id = product.id 
	 		 AND product_order.order_id =".$orderid;
	$query= Query($query);
	$products = " ";
	        $products .=  "<table  border = \"0\"  cellspacing= \"0\" cellpadding = \"0\">";
			$i=1;
			 while($product = FetchAssoc($query)){
			 $products  .= "<tr>";
			 $product_rate = $product['rate'];
			 $product_value = $product['value'];
			 $products .= "<td align=\"left\" valign=\"top\" >".$product['name']."</td>
			               <td align=\"center\" valign=\"top\" >".$product['carton_no']."</td>
						   <td valign=\"top\" align=\"center\">".$product['quantity']."</td>
						   <td align=\"right\" valign=\"top\">".number_format($product_rate,2)."&nbsp;</td>
						   <td align=\"right\" valign=\"top\" >".number_format($product_value,2);
			  $products  .= "&nbsp;</td></tr>";
			  $i++;
			}
				
			$products .=  "</table>";	
			   //	$products	=	substr_replace($products,"",-5);
	
	
	return $products;
	
	}
}

?>